<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Generic - PHP"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
  <description>
Sniffs related to basic PHP usage
  </description>

  <rule name="DeprecatedFunctions" class="Generic_Sniffs_PHP_DeprecatedFunctionsSniff">
    <description>
Reports the use of any deprecated functions
    </description>
    <example>
      <![CDATA[
// Raises error
set_magic_quotes_runtime(false);
      ]]>
    </example>
  </rule>

  <rule name="DisallowShortOpenTag" class="Generic_Sniffs_PHP_DisallowShortOpenTagSniff">
    <description>
Makes sure that shorthand PHP open tags are not used.
    </description>
    <example>
      <![CDATA[
<? echo 'This is not acceptable!';
      ]]>
    </example>
  </rule>

  <rule name="ForbiddenFunctions" class="Generic_Sniffs_PHP_ForbiddenFunctionsSniff">
    <description>
Reports the use of alias functions that are kept in PHP for compatibility with older versions.

Can be used to forbid the use of any function when creating your own Sniff class extending from this class.
    </description>
    <properties>
        <property name="error" description="if true, an error will be reported; otherwise a warning." value="true"/>
    </properties>
    <example>
      <![CDATA[
delete($foo);
sizeof($bar);
      ]]>
    </example>
      <prop
  </rule>

  <rule name="LowerCaseConstant" class="Generic_Sniffs_PHP_LowerCaseConstantSniff">
    <description>
Checks that all uses of true, false and null are lowercase.
    </description>
    <example>
      <![CDATA[
true, false, null // Good
TRUE, FALSE, NULL // Bad
TrUe, FaLsE, NuLl // Also bad
      ]]>
    </example>
  </rule>

  <rule name="NoSilencedErrors" class="Generic_Sniffs_PHP_NoSilencedErrorsSniff">
    <description>
Disallows the usage of the @ operator.
    </description>
    <example>
      <![CDATA[
@stuff();
if(@$_GET['stuff']) { }
      ]]>
    </example>
    <properties>
      <property name="error" description="if true, an error will be reported; otherwise a warning." value="true"/>
    </properties>
  </rule>

  <rule name="UpperCaseConstant" class="Generic_Sniffs_PHP_UpperCaseConstantSniff">
    <description>
Checks that all uses of TRUE, FALSE and NULL are uppercase.
    </description>
    <example>
      <![CDATA[
TRUE, FALSE, NULL // Good
true, false, null // Bad
TrUe, FaLsE, NuLl // Also bad
      ]]>
    </example>
  </rule>

</ruleset>
